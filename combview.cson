'fileTypes': [
  'cv'
  'cvw'
  'cbv'
  'combview'
]
'name': 'CombView'
'patterns': [
  {
    'include': '#line_comment'
  }
  {
    'include': '#double_strings'
  }
  {
    'match': "\\b(?i:(\\d+\\.\\d*(e[\\-\\+]?\\d+)?))(?=[^a-zA-Z_])"
    "name": "constant.numeric.float.combview"
  }
  {
    "match": "\\b(?i:(\\d+e[\\-\\+]?\\d+))"
    "name": "invalid.illegal.combview"
  }
  {
    "match": "\\b([1-9]+[0-9]*|0)"
    "name": "constant.numeric.integer.decimal.combview"
  }
  {
    'comment': 'keywords for conditional operators'
    'name': 'keyword.control.conditional.combview'
    'match': '\\b(if|then|else)\\b'
  }
  {
      'comment': 'keywords for inheritance'
      'name': 'keyword.inheritance.combview'
      'match': '\\b(is)\\b'
  }
  {
      'comment': 'labels'
      'begin':'(\\@[A-Za-z_])'
      'beginCaptures':
        '1':
          'name':'entity.name.tag.replacement'
      'end':'\\s'
      'contentName': 'entity.name.tag.replacement'
      'patterns': [
        {
          'include':'#replacement'
        }
        {
          'include':'#line_comment'
        }
        {
          'include': '#double_strings'
        }
      ]
  }
  {
      'comment': 'keywords for error testings'
      'name': 'invalid.illegal.combview'
      'match': '\\b(error)\\b'
  }
  {
      'comment': 'keywords for conditional operators'
      'name': 'keyword.control.conditional.combview'
      'match': '\\b(if|then|else)\\b'
  }
  {
      'match': '^\\s*(type)(.*$\\n?)'
      'captures':
        '1':
          'name':'keyword.type.name'
        '2':
          'name':'meta.name.type'
          'patterns': [
           {
             'include': '#line_comment'
           }
           {
             'include' : '#compoundtypename'
           }
           {
             'include' : '#simpletypename'
           }
           {
             'include':'#complextypename'
           }
        ]
      'comment':'end of type - thanks to http://www.apeth.com/nonblog/stories/textmatebundle.html'
  }
  {
    'include':'#complextypename'
  }
  {
    'include':'#function'
  }
]
'repository':
  'line_comment':
    'captures':
      '1':
        'name': 'comment.line.number-sign.combview'
      '2':
        'name': 'punctuation.definition.comment.combview'
    'match': '(#)(.*$\\n?)'
  'replacement':
    'match': '(\\$[A-Za-z_][A-Za-z0-9_]*)'
    'name': 'entity.name.type.replacement'
  'keyword_arguments':
    'begin': '\\b([a-zA-Z_][a-zA-Z_0-9(\\s*of)]*)\\s*(=)(?!=)'
    'beginCaptures':
      '1':
        'name': 'variable.parameter.function.combview'
      '2':
        'name': 'keywordssss.operator.assignment.combview'
    'end': '\\s*(?:(,)|(?=$\\n?|[\\)\\:]))'
    'endCaptures':
      '1':
        'name': 'punctuation.separator.parameters.python'
    'patterns': [
      {
        'include': '$self'
      }
     ]
  'double_strings':
    'patterns': [
      {
        'begin': '(u|u8|U|L)?"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.combview'
          '1':
            'name': 'comment.multiline.combview'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.comment.end.combview'
        'name': 'comment.multiline.combview'
        'patterns': [
          {
            'match': '\\\\u\\h{4}|\\\\U\\h{8}'
            'name': 'comment.multiline.combview'
          }
          {
            'match': '\\\\[\'"]'
            'name': 'comment.multiline.combview'
          }
          {
            'match': '\\\\[0-7]{1,3}'
            'name': 'comment.multiline.combview'
          }
          {
            'match': '\\\\x\\h+'
            'name': 'comment.multiline.combview'
          }
        ]
      }
    ]
  'single_strings':
    'patterns': [
      {
        'begin': '(u|u8|U|L)?\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.combview'
          '1':
            'name': 'comment.multiline.combview'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.comment.end.combview'
        'name': 'comment.multiline.combview'
        'patterns': [
          {
            'match': '\\\\u\\h{4}|\\\\U\\h{8}'
            'name': 'comment.multiline.combview'
          }
          {
            'match': '\\\\[\'"]'
            'name': 'comment.multiline.combview'
          }
          {
            'match': '\\\\[0-7]{1,3}'
            'name': 'comment.multiline.combview'
          }
          {
            'match': '\\\\x\\h+'
            'name': 'comment.multiline.combview'
          }
        ]
      }
    ]
  'entity_name_function':
    'patterns': [
      {
        'include': '#magic_function_names'
      }
      {
        'include': '#illegal_names'
      }
      {
        'include': '#generic_names'
      }
    ]
  'generic_names':
    'match': '[A-Za-z_][A-Za-z0-9_]*'
  'illegal_names':
    'match': '\\b(if|then|else|function|is|of|solution)\\b'
    'name': 'invalid.illegal.name.combview'
  'magic_function_names':
    'comment': 'these methods have magic interpretation by python and are generally called indirectly through syntactic constructs'
    'match':'(?x)\\b(__(?:abs|add|and|bool|bytes|call|cmp|coerce|complex|contains|del|delattr|delete|delitem|delslice|dir|div|divmod|enter|eq|exit|float|floordiv|format|ge|get|getattr|getattribute|getitem|getslice|gt|hash|hex|iadd|iand|idiv|ifloordiv|ilshift|imatmul|imod|imul|index|init|instancecheck|int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|length_hint|long|lshift|lt|matmul|missing|mod|mul|ne|neg|next|new|nonzero|oct|or|pos|pow|radd|rand|rdiv|rdivmod|repr|reversed|rfloordiv|rlshift|rmatmul|rmod|rmul|ror|round|rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|setslice|str|sub|subclasscheck|truediv|unicode|xor)__)\\b'
    'name': 'support.function.magic.combview'
  'function':
        'comment': 'external function definition'
        'begin': '\\s*(function)\\s+(?=[A-Za-z_][A-Za-z0-9_]*\\()'
        'beginCaptures':
          '1':
            'comment': 'keyword FUNCTION'
            'name': 'keyword.function.name.combview'
          '2':
            'name': 'storage.type.type.combview'
        'end': '(\\))\\s*(-\\>)\\s*([A-Za-z_][A-Za-z0-9_\\s]*)'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.parameters.end.combview'
          '2':
            'name': 'keyword.function.arrow.combview'
          '3':
            'name': 'entity.name.type.combview'
        'comment': 'meta.function.combview'
        'name': 'meta.function.combview'
        'patterns': [
          {
            'begin': '(?=[A-Za-z_][A-Za-z0-9_]*)'
            'contentName': 'entity.name.function.combview'
            'end': '(?![A-Za-z0-9_])'
            'patterns': [
              {
                'include': '#entity_name_function'
              }
            ]
          }
          {
            'begin': '(\\()'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.parameters.begin.combview'
            'contentName': 'invalid.illegal.test.combview'
            'end': '(?=\\)\\s*-\\>)'
            'patterns': [
              {
                'include': '#line_comments'
              }
              {
                'include': '#double_strings'
              }
              {
                'include': '#function'
              }
              {
                'match': '(\\b):([a-zA-Z_][a-zA-Z_0-9\\s]*)(?:(,)|(?=[\\n\\)]))'
                'captures':
                  '1':
                    'name': 'variable.parameter.function.combview'
                  '2':
                    'name': 'punctuation.separator.parameters.combview'
                  '3':
                    'name':'entity.name.type.test'
                    'patterns': [
                      {
                        'include':'#line_comments'
                      }
                      {
                        'include':'#simpletypename'
                      }
                      {
                        'include':'#compoundtypename'
                      }
                    ]
                  '4':
                    'name': 'punctuation.separator.parameters.combview'
              }
              {
                                'match': '\\b([a-zA-Z_][a-zA-Z_0-9]*)\\s*(?:(:)|(?=[\\n\\)]))\\s*([a-zA-Z_][a-zA-Z_0-9\\(\\)]*)\\s*(?:(of\\s)\\s*([a-zA-Z_][a-zA-Z_0-9\\(\\)]*)|(?=[\\n\\),]))'
                                'captures':
                                  '1':
                                    'name': 'variable.parameter.function.combview'
                                  '2':
                                    'name': 'punctuation.separator.parameters.combview'
                                  '3':
                                    'comment': 'punctuation.separator.parameters.python'
                                    'name': 'entity.name.type.combview'
                                  '4':
                                    'name': 'keywordssss.external.of.combview'
                                  '5':
                                    'comment': 'punctuation.separator.parameters.python'
                                    'name': 'entity.name.type.combview'
              }
            ]
          }
        ]
      'comment': 'end external function'

  'simpletypename' :
        'comment' : 'type declaration'
        'match': '([A-Za-z_][A-Za-z0-9_]*)\\s*(?:($\\n|,))'
        'captures':
          '1':
            'name':'entity.name.type.combview'
      'comment' : 'end type'
  'compoundtypename' :
        'comment' : 'type declaration'
        'match': '([A-Za-z_][A-Za-z0-9_]*)\\s*(of)(.*)(?:($\\n|,))'
        'captures':
          '1':
            'name':'entity.name.type.combview'
          '2':
            'name':'keyword.type.of.combview'
          '3':
            'name':'meta.maybe.new.type'
            'patterns':[
              {
                'begin':'\\('
                'end':'\\)'
                'contentName':'meta.parameter.list'
                'patterns':[
                  {
                    'include':'#line_comment'
                  }
                  {
                    'include':'#replacement'
                  }
                ]
              }
              {
                'include':'#line_comment'
              }
              {
                'include':'#replacement'
              }
              {
                'include':'#simpletypename'
              }
              {
                'include':'#compoundtypename'
              }
            ]
      'comment' : 'end type'
  'complextypename' :
        'comment' : 'complex type declaration'
        'begin':'^\\s*([A-Za-z_][A-Za-z0-9_]*)\\(.*\\)\\s*{'
        'beginCaptures':
          '1':
            'name':'entity.name.type.combview'
        'end':'}'
        'name':'invalid.illegal.testcomplex'
        'patterns':[
          {
            'match': '([A-Za-z_][A-Za-z0-9_]*)\\s*(\\([A-Za-z_][\\sA-Za-z0-9_]*\\))(.*)'
            'captures':
              '1':
                'name':'entity.name.type.combview'
              '2':
                'name':'keyword.type.of.combview'
              '3':
                'name':'meta.maybe.new.type'
          }
        ]

      'comment' : 'end type'
'scopeName': 'source.combview'
